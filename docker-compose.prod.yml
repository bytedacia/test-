version: '3.8'

services:
  discord-bot:
    build: .
    container_name: discord-music-defense-bot-prod
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_APPLICATION_ID=1428455175038963876
      - DISCORD_PUBLIC_KEY=85aa6f8f2af5ec24fdc6822f57fb734be5fad49008589073d763090cd9cd1ac4
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - GEMINI_API_KEY=AIzaSyDAM3XfwTJpJX05xzSZzOR3rkXLWToYhgo
      - EMAIL_SMTP_SERVER=smtp.gmail.com
      - EMAIL_SMTP_PORT=587
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - ADMIN_EMAIL=daciabyte@gmail.com
      - DEV_USER_ID=880170915340644352
    volumes:
      - ./backups:/app/backups
      - ./logs:/app/logs
    networks:
      - bot-network
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/discord_bot_rules.yml:/etc/prometheus/discord_bot_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - bot-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana_dashboard.json:/var/lib/grafana/dashboards/discord_bot.json
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - bot-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - discord-bot
      - prometheus
      - grafana
    networks:
      - bot-network

networks:
  bot-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
